#!/bin/zsh

# Aliases / functions
zshrc_load_status 'aliases and functions'

_my_extended_wordchars='*?_-.[]~=&;!#$%^(){}<>:@,\\'
_my_extended_wordchars_space="${_my_extended_wordchars} "
_my_extended_wordchars_slash="${_my_extended_wordchars}/"

# is the current position \-quoted ?
is_backslash_quoted () {
    test "${BUFFER[$CURSOR-1,CURSOR-1]}" = "\\"
}

unquote-forward-word () {
    while is_backslash_quoted
    do zle .forward-word
    done
}

unquote-backward-word () {
    while is_backslash_quoted
    do zle .backward-word
    done
}

backward-to-space () {
    local WORDCHARS="${_my_extended_wordchars_slash}"
    zle .backward-word
    unquote-backward-word
}

forward-to-space () {
    local WORDCHARS="${_my_extended_wordchars_slash}"
    zle .forward-word
    unquote-forward-word
}

backward-to-/ () {
    local WORDCHARS="${_my_extended_wordchars}"
    zle .backward-word
    unquote-backward-word
}

forward-to-/ () {
    local WORDCHARS="${_my_extended_wordchars}"
    zle .forward-word
    unquote-forward-word
}

zle -N backward-to-space
zle -N forward-to-space
zle -N backward-to-/
zle -N forward-to-/

zle -N kill-region-or-backward-word

autoload zrecompile

alias which >&/dev/null && unalias which

alias wh=where

alias run-help >&/dev/null && unalias run-help
autoload run-help

autoload zcalc

bash () {
    NO_SWITCH="yes" command bash "$@"
}

restart () {
    exec $SHELL $SHELL_ARGS "$@"
}

profile () {
    ZSH_PROFILE_RC=1 $SHELL "$@"
}

reload () {
    if [[ "$#*" -eq 0 ]]; then
        . $zdotdir/.zshrc
    else
        local fn
        for fn in "$@"; do
            unfunction $fn
            autoload -U $fn
        done
    fi
}

alias p='popd'

alias ls='command ls -F --color=auto'

alias ll='ls -l'

alias grep='command grep --color'

alias git='PAGER=less git'

alias -g ...=../..
alias -g ....=../../..
alias -g .....=../../../..
alias -g ......=../../../../..
alias cd..='cd ..'
alias cd...='cd ../..'
alias cd....='cd ../../..'
alias cd.....='cd ../../../..'

alias cd/='cd /'

alias 1='cd -'
alias 2='cd +2'
alias 3='cd +3'
alias 4='cd +4'
alias 5='cd +5'
alias 6='cd +6'
alias 7='cd +7'
alias 8='cd +8'
alias 9='cd +9'

alias md='mkdir -p'
alias rd=rmdir

alias d='dirs -v'

po () {
    popd "$@"
    dirs -v
}

autoload zmv
alias mmv='noglob zmv -W'

alias j='jobs -l'
alias dn=disown

alias h='history -$LINES'

alias ts=typeset
compdef _typeset ts

alias cls='clear'
alias term='echo $TERM'

_ssh_auth_save() {
    ln -sf "$SSH_AUTH_SOCK" "$HOME/.screen/ssh-auth-sock.$HOSTNAME"
}
alias screen='_ssh_auth_save ; export HOSTNAME=$(hostname) ; screen'

alias info='pinfo'

alias f=finger

alias mv='nocorrect mv'
alias cd='nocorrect cd'
alias cp='nocorrect cp'
alias mkdir='nocorrect mkdir'
alias man='nocorrect man'
alias find='noglob find'
alias gcc='nocorrect gcc'
alias mkdir='nocorrect mkdir'

alias mysql='nocorrect mysql'
alias mysqlshow='nocorrect mysqlshow'
alias rj='nocorrect rj'

alias sd='export DISPLAY=:0.0'

alias mplayer=' mplayer'
alias xine=' xine'

opiedev () {
    export QTDIR=~/opiehome/qt-2.3.7
    export OPIEDIR=~/opiehome/opie
    export LD_LIBRARY_PATH=$QTDIR/lib:$OPIEDIR/lib
    export PATH=$QTDIR/bin:$OPIEDIR/bin:$PATH
}

# emacs, windowed
e () {
    if [[ -n "$OTHER_USER" ]]; then
        emacs -l $ZDOTDIR/.emacs "$@" &!
    else
        emacs "$@" &!
    fi
}

# enable ^Z
alias nano='/usr/bin/nano -z'


# change some applications
alias vi='zile'
alias top='htop'
alias cat='dog'
alias less='most'

if which lftp >&/dev/null; then
    alias ftp=lftp
elif which ncftp >&/dev/null; then
    alias ftp=ncftp
fi

alias tf='less +F'
alias tfs='less -S +F'

alias bz=bzip2
alias buz=bunzip2

alias -s pdf=xpdf
alias -s ps=gv
alias -s dvi=xdvi
alias -s html=html
alias -s tgz='tar zxvf'


cpd() {
    TRAPINT () {
        bindkey "^M" accept-line
        trap - INT
        builtin let "$1 > 0" && return $[128+$1]
    }

    bindkey -s "^M" "^X^W"
    bindkey "^[k" kill-region
    bindkey -s "" "^[2^[|^A cd ^A^@^[<^[k^E^@^[>^E^[k^[a^X^K"

    cpd_var=` builtin print -l \`dirs \``

    vared cpd_var
    bindkey "^M" accept-line
    eval $cpd_var
}

alias pvs='pvs -emacs emacs-cvs'

flv2avi () {
    mencoder $1 -ofps 15 -vf scale=300:-2 -oac lavc -ovc lavc \
        -lavcopts vcodec=msmpeg4v2:abitrate=64                \
        -o `basename $1 .flv`.avi
}

function time2rate () {                                                                                                   
    echo "26 * 1024 * 1024 / (60 * $1)" | bc
}

function @ () {
    url="$*"
    [ -e "$url" ] && url="file://$url"
    echo $url
    uzbl --uri $url
}

alias covertest='nocorrect ~/lib/python2.5/site-packages/coverage -x'
#alias coverreport='nocorrect ~/lib/python2.5/site-packages/coverage -rm -o /usr,/home/yann/lib,/home/yann/apps'
alias coverreport='nocorrect ~/lib/python2.5/site-packages/coverage -b -d html && @ html/index.html'
